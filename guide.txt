

Hi, sorry for the mess I'm dumping on you all, but I'm a little stumped. Currently when I execute my program, I can draw dots of water, as I press start, it just freezes and doesn't unfreeze.

I have a while loop that creates threads and waits for them to finish their work then loops again. This is due to the fact that once you a thread has finished, it can't be restarted and you have to create a new thread object, so I think the possible source of this issue is the fact that I'm rapidly creating and overwriting threads, which are quite heavy objects. If i limit the thread to 10 iterations (using the counter variable), it will only freeze for a short time, then unfreeze and the water will have moved a small amount.

Ideally I could have 4 threads that have loops in them, but I'm not sure how to ensure they sync after each step.

The main code is in flow and WaterThread

Any help is greatly appreciated.

Side note the play/pause/reset buttons dont work correctly and will probably throw errors, except for the first press of the start button.

 

Hi there,

You can try to enforce synchronization without recreating your thread objects by using some sort of boolean flag (that is visible to all threads), or atomic integer or a combination of both that indicates either that the simulation has paused or that the threads must reset and begin traversing the grid once more. This will remove the overhead of creating multiple threads and solve the problem of freezing, whilst allowing you to satisfy the requirement of pausing and resuming the simulation.

Create the thread objects outside of the while loop, and you can include some conditional logic in your while loop that evaluates the flag (paused or not), and the integer value to check if all threads have completed (the integer value must be 4, which signifies all threads have traversed), and thus restart the loop. This is just one sample approach, but you can use and adapt the general principles. 

